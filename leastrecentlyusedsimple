#include <stdio.h>

int findLRU(int time[], int size) {
    int min = time[0], pos = 0;
    for (int i = 1; i < size; i++) {
        if (time[i] < min) {
            min = time[i];
            pos = i;
        }
    }
    return pos;
}

void lru(int pages[], int n, int capacity) {
    int frame[capacity], time[capacity];
    int used = 0, faults = 0, counter = 0;

    for (int i = 0; i < capacity; i++) frame[i] = -1;

    printf("Page\tFrame\n");

    for (int i = 0; i < n; i++) {
        int hit = 0;
        for (int j = 0; j < used; j++) {
            if (frame[j] == pages[i]) {
                counter++;
                time[j] = counter;
                hit = 1;
                break;
            }
        }

        if (!hit) {
            faults++;
            counter++;
            if (used < capacity) {
                frame[used] = pages[i];
                time[used] = counter;
                used++;
            } else {
                int lru = findLRU(time, capacity);
                frame[lru] = pages[i];
                time[lru] = counter;
            }
        }

        printf("%2d\t", pages[i]);
        for (int j = 0; j < used; j++) printf("%d ", frame[j]);
        printf(hit ? " (Hit)\n" : " (Fault)\n");
    }

    printf("\nTotal Page Faults: %d\n", faults);
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4};
    int n = sizeof(pages) / sizeof(pages[0]);
    int capacity = 3;

    lru(pages, n, capacity);

    return 0;
}
